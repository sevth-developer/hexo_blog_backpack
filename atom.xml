<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sevth的小破站</title>
  
  <subtitle>一个野生coder</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sevth.com/"/>
  <updated>2020-04-29T08:01:37.268Z</updated>
  <id>https://sevth.com/</id>
  
  <author>
    <name>sevth</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>golang：随机数的产生</title>
    <link href="https://sevth.com/study/golang/golang%EF%BC%9A%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%9A%84%E4%BA%A7%E7%94%9F.html"/>
    <id>https://sevth.com/study/golang/golang%EF%BC%9A%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%9A%84%E4%BA%A7%E7%94%9F.html</id>
    <published>2020-04-29T07:43:37.000Z</published>
    <updated>2020-04-29T08:01:37.268Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>今日记录：随机数的产生与<code>随机</code></p></blockquote><a id="more"></a><h3 id="产生随机数的函数"><a href="#产生随机数的函数" class="headerlink" title="产生随机数的函数"></a>产生随机数的函数</h3><div class="highlight-container"><figure class=" highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Intn returns, as an int, a non-negative pseudo-random number in [0,n)</span></span><br><span class="line"><span class="comment">// from the default Source.</span></span><br><span class="line"><span class="comment">// It panics if n &lt;= 0.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Intn</span><span class="params">(n <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123; <span class="keyword">return</span> globalRand.Intn(n) &#125;</span><br></pre></td></tr></table></figure></div><p>这是官方文档的说明，这个函数根据返回一个输入<code>进制</code>随机数。</p><p>然而在我们的实际使用中，这个随机数产生的随机数变得固定了，也就是说不随机了。</p><p>做个测试：</p><div class="highlight-container"><figure class=" highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">num := rand.Intn(<span class="number">10</span>)<span class="comment">//十进制随机数</span></span><br><span class="line">fmt.Printf(<span class="string">"num=%d\n"</span>, num)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>结果如下：</p><p><img src="https://img.sevth.com/website/2020/04/29/893ebcd45142f5915021708fa4c7db17.png" alt="image-20200429155503781"></p><p>看起来似乎是随机了，然鹅你运行多次发现，打印的数据每次运行都是相同的，连顺序都一样。</p><p>这是因为程序编译后，运行的环境是固定的，所以随机数产生后不再变化。</p><h3 id="加入随机种子"><a href="#加入随机种子" class="headerlink" title="加入随机种子"></a>加入随机种子</h3><p>加入随机种子可以解决随机数不随机的问题</p><div class="highlight-container"><figure class=" highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">rand.Seed(time.Now().UnixNano())<span class="comment">//加入随机种子</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">num := rand.Intn(<span class="number">10</span>)</span><br><span class="line">fmt.Printf(<span class="string">"num=%d\n"</span>, num)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>此时，随机数的产生就真的随机了，不再是固定的随机数。</p><h3 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h3><div class="highlight-container"><figure class=" highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rand.Seed(time.Now().UnixNano())</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;今日记录：随机数的产生与&lt;code&gt;随机&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="study" scheme="https://sevth.com/categories/study/"/>
    
      <category term="golang" scheme="https://sevth.com/categories/study/golang/"/>
    
    
      <category term="golang" scheme="https://sevth.com/tags/golang/"/>
    
      <category term="rand" scheme="https://sevth.com/tags/rand/"/>
    
  </entry>
  
  <entry>
    <title>golang获取结构体属性个数</title>
    <link href="https://sevth.com/study/golang/golang%EF%BC%9A%E8%8E%B7%E5%8F%96%E7%BB%93%E6%9E%84%E4%BD%93%E5%B1%9E%E6%80%A7%E4%B8%AA%E6%95%B0.html"/>
    <id>https://sevth.com/study/golang/golang%EF%BC%9A%E8%8E%B7%E5%8F%96%E7%BB%93%E6%9E%84%E4%BD%93%E5%B1%9E%E6%80%A7%E4%B8%AA%E6%95%B0.html</id>
    <published>2020-04-28T12:32:45.000Z</published>
    <updated>2020-04-28T12:45:49.186Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>快速解疑碰到的问题</p><p><code>golang</code> 学习积累</p></blockquote><a id="more"></a><h3 id="使用-reflect-来获取结构体的属性个数"><a href="#使用-reflect-来获取结构体的属性个数" class="headerlink" title="使用 reflect 来获取结构体的属性个数"></a>使用 <code>reflect</code> 来获取结构体的属性个数</h3><div class="highlight-container"><figure class=" highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"reflect"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Study <span class="keyword">struct</span> &#123;</span><br><span class="line">name   <span class="keyword">string</span></span><br><span class="line">age   <span class="keyword">int8</span></span><br><span class="line">school <span class="keyword">string</span></span><br><span class="line">class []<span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(reflect.ValueOf(Study&#123;&#125;).NumField())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>结果如下</strong></p><p><img src="https://img.sevth.com/website/2020/04/28/30f78ab9236d3fdc307910f4d4ad07b6.png" alt="image-20200428204105350"></p><h3 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h3><div class="highlight-container"><figure class=" highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reflect.ValueOf(<span class="keyword">struct</span>&#123;&#125;).NumField()</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;快速解疑碰到的问题&lt;/p&gt;
&lt;p&gt;&lt;code&gt;golang&lt;/code&gt; 学习积累&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="study" scheme="https://sevth.com/categories/study/"/>
    
      <category term="golang" scheme="https://sevth.com/categories/study/golang/"/>
    
    
      <category term="golang" scheme="https://sevth.com/tags/golang/"/>
    
      <category term="struct" scheme="https://sevth.com/tags/struct/"/>
    
  </entry>
  
  <entry>
    <title>自制极简网页计数器</title>
    <link href="https://sevth.com/develop/javascript/%E8%87%AA%E5%88%B6%E6%9E%81%E7%AE%80%E7%BD%91%E9%A1%B5%E8%AE%A1%E6%95%B0%E5%99%A8.html"/>
    <id>https://sevth.com/develop/javascript/%E8%87%AA%E5%88%B6%E6%9E%81%E7%AE%80%E7%BD%91%E9%A1%B5%E8%AE%A1%E6%95%B0%E5%99%A8.html</id>
    <published>2020-04-22T19:21:41.000Z</published>
    <updated>2020-04-28T12:44:30.848Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>因为懒，不想写过说明，直接从 <code>github</code> 上 copy 过来了，将就着看吧，因为是使用的 <code>Dom</code> 监听事件，所以，是不支持 <code>Pjax</code> 了，再然后，有一点小小的失误，里面用了箭头函数，也就是低版本的浏览器兼容性没做，改天有空再修改一下吧。</p><p>关于后台程序，有空会整理出来，最后，我只是一个小菜鸟，写的并不好。</p></blockquote><a id="more"></a><h1 id="counter-js"><a href="#counter-js" class="headerlink" title="counter_js"></a>counter_js</h1><p>使用 Lumen 作为后端开发的简易网页计数器，用于支持 <code>Hexo</code> 博客的 <code>uv</code>、<code>pv</code>统计。</p><h2 id="浏览器支持"><a href="#浏览器支持" class="headerlink" title="浏览器支持"></a>浏览器支持</h2><table><thead><tr><th align="center"><img src="https://img.sevth.com/website/2020/04/23/007fb2d1bca8c5a4d77bb9737be83166.png" alt="Chrome"></th><th align="center"><img src="https://img.sevth.com/website/2020/04/23/b10f92e8401be0c0cca4e4d377a6ed29.png" alt="Firefox"></th><th align="center"><img src="https://img.sevth.com/website/2020/04/23/b39699e686961cde3e357927645affc1.png" alt="Safari"></th><th align="center"><img src="https://img.sevth.com/website/2020/04/23/5adb67304aa9e3e6eea2511d20f089c2.png" alt="Opera"></th><th align="center"><img src="https://img.sevth.com/website/2020/04/23/de9a0d96608c3cd49a1221afd856028c.png" alt="Edge"></th></tr></thead><tbody><tr><td align="center">Latest ✔</td><td align="center">Latest ✔</td><td align="center">Latest ✔</td><td align="center">Latest ✔</td><td align="center">Latest ✔</td></tr></tbody></table><h2 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h2><p><strong>在 <code>head</code> 中添加 <code>script</code> 标签：</strong></p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.sevth.com&#x2F;website&#x2F;counter_js&#x2F;counter.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></div><h2 id="数据说明"><a href="#数据说明" class="headerlink" title="数据说明"></a>数据说明</h2><h3 id="返回数据"><a href="#返回数据" class="headerlink" title="返回数据"></a>返回数据</h3><p><strong>引入 <code>script</code> 后，将返回四个数据：</strong></p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">callback(&#123;</span><br><span class="line">site_pv:12&#x2F;&#x2F;站点总访问量</span><br><span class="line">site_uv:4&#x2F;&#x2F;站点访问人次</span><br><span class="line">page_pv:6&#x2F;&#x2F;当前页面访问量</span><br><span class="line">version:1.0&#x2F;&#x2F;版本号</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><p>其中 <code>site_pv</code> 将自动填入页面中 <code>id</code> 为 <code>counter-site-pv</code> 的容器中，<code>site_uv</code> 将自动填入页面中 <code>id</code> 为 <code>counter-site-uv</code> 的容器中，<code>page_pv</code> 将自动填入页面中 <code>id</code> 为 <code>counter-page_pv</code> 的容器中。 <code>version</code> 暂时没有其他作用。</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><div class="highlight-container"><figure class=" highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="built_in">window</span>.counter_config = &#123;</span><br><span class="line">    strict: <span class="literal">true</span><span class="comment">//启用严格uv统计模式</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><p>这个开关的作用就是在统计 <code>uv</code> 时更严格。统计的原理是首次访问时将写入一个检测 <code>cookie</code> ，未开启时，每过24h，旧用户将按照新用户计入 <code>uv</code> ，也就是cookie将在24h后删除，再次访问就相当于一个新用户了，开启严格模式后，用户在24h内访问一次，将刷新<code>cookie</code> 时间。按访问自然人统计。</p><p><strong>注意：该配置默认是关闭的</strong></p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><div class="highlight-container"><figure class=" highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.counter_config = &#123;</span></span><br><span class="line"><span class="actionscript">    strict: <span class="literal">true</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.sevth.com/website/counter_js/counter.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">总人数：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"counter-site-uv"</span>&gt;</span>99+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">此页面访问量：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"counter-page-pv"</span>&gt;</span>99+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">本站总访问量：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"counter-site-pv"</span>&gt;</span>99+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><h2 id="webpack-打包"><a href="#webpack-打包" class="headerlink" title="webpack 打包"></a>webpack 打包</h2><ol><li><p>克隆仓库</p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/sevth-developer/counter_js.git</span><br></pre></td></tr></table></figure></div></li><li><p>进入目录并安装依赖</p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ./counter_js &amp;&amp; npm install</span><br></pre></td></tr></table></figure></div></li><li><p>打包文件</p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure></div><p>打包完成后会在 <code>dist</code> 目录生成打包好的文件。</p></li></ol><h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><ul><li><input disabled="" type="checkbox"> <del>访问热度页面统计接口</del> </li></ul><blockquote><p>因为页面 <code>url</code> 经过<code>base64</code>编码后，字符长度超了，所以改用<code>sha1</code> 那么，就没办法做统计了。</p></blockquote><h2 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h2><blockquote><p>为推进互联网从 <code>http</code> 过渡到 <code>https</code> ，默认提供的加载地址仅支持 <code>https</code> 方式访问，如果有特殊需要，请自行下载文件引入。</p></blockquote><h2 id="支持"><a href="#支持" class="headerlink" title="支持"></a>支持</h2><ul><li><a href="/go/?h">Issues</a></li><li><a href="https://sevth.com">sevth的小破站</a></li><li>[<a href="mailto:sevthdev@gmail.com">sevthdev@gmail.com</a>](</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;因为懒，不想写过说明，直接从 &lt;code&gt;github&lt;/code&gt; 上 copy 过来了，将就着看吧，因为是使用的 &lt;code&gt;Dom&lt;/code&gt; 监听事件，所以，是不支持 &lt;code&gt;Pjax&lt;/code&gt; 了，再然后，有一点小小的失误，里面用了箭头函数，也就是低版本的浏览器兼容性没做，改天有空再修改一下吧。&lt;/p&gt;
&lt;p&gt;关于后台程序，有空会整理出来，最后，我只是一个小菜鸟，写的并不好。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="develop" scheme="https://sevth.com/categories/develop/"/>
    
      <category term="javascript" scheme="https://sevth.com/categories/develop/javascript/"/>
    
    
      <category term="自制" scheme="https://sevth.com/tags/%E8%87%AA%E5%88%B6/"/>
    
      <category term="计数器" scheme="https://sevth.com/tags/%E8%AE%A1%E6%95%B0%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>如何配置hexo的deploy同时发布到GitHub和rsync</title>
    <link href="https://sevth.com/technology/website/%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AEhexo%E7%9A%84deploy%E5%90%8C%E6%97%B6%E5%8F%91%E5%B8%83%E5%88%B0GitHub%E5%92%8Crsync.html"/>
    <id>https://sevth.com/technology/website/%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AEhexo%E7%9A%84deploy%E5%90%8C%E6%97%B6%E5%8F%91%E5%B8%83%E5%88%B0GitHub%E5%92%8Crsync.html</id>
    <published>2020-04-16T06:10:01.000Z</published>
    <updated>2020-04-26T10:27:22.801Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>配置 <code>deploy</code> 快速发布，免去手动上传的烦恼。</p><p>配置多个 <code>deploy</code> 同时发布，作镜像备份。</p></blockquote><a id="more"></a><h2 id="配置deploy到GitHub"><a href="#配置deploy到GitHub" class="headerlink" title="配置deploy到GitHub"></a>配置deploy到GitHub</h2><h3 id="新建一个仓库"><a href="#新建一个仓库" class="headerlink" title="新建一个仓库"></a>新建一个仓库</h3><ol><li>登录到GitHub页面，没有账号的话就注册一个。点击加号新建一个仓库</li></ol><p><img src="https://img.sevth.com/website/2020/04/16/778fc62cafe540741bbd6a504b64b3bf.png" alt="image-20200416145213738"></p><p>仓库名称按你自己喜欢填，如果你想访问的时候不带子目录的话，这里仓库名称应设置为 <code>username.github.io</code> ，将 <code>username</code> 替换成你的 <code>github</code> 用户名。然后其他保持默认，点绿色的按钮创建。</p><ol start="2"><li>将刚刚创建的 <code>仓库</code> 的 <code>HTTPS地址</code> 复制下来并保存。</li></ol><h3 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h3><ol start="2"><li><p>安装 <code>deploy</code> 插件</p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></div></li><li><p>打开 <code>hexo</code> 项目根目录，打开并编辑 <code>_config.yml</code> 文件</p><p>请直接找到的底部，填入如下几个信息，注意缩进保持一致！</p> <div class="highlight-container"><figure class=" highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span><span class="comment">#类型</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/sevth-developer/sevth-developer.github.io.git</span><span class="comment">#仓库地址，即刚刚复制的那个链接</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> <span class="comment">#默认分支，写一样就好</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">'update article'</span> <span class="comment">#默认提交信息，自己随意写</span></span><br></pre></td></tr></table></figure></div></li><li><p>输入命令 <code>hexo g -d</code> 提交一次，不出意外的话，系统会弹出提示框让你输入 <code>github</code> 的账号密码，记得点保存。如果没有提示，那么检查系统内 <code>git</code> 是否安装。(文末附windows版下载地址，其他系统请用命令行安装)</p><p>如果发布成功，命令行最后应该会显示 <code>deploy git done</code>字样。</p></li><li><p>进入<code>github</code>仓库检查是否有数据。</p></li></ol><h3 id="配置-GitHub-page"><a href="#配置-GitHub-page" class="headerlink" title="配置 GitHub page"></a>配置 GitHub page</h3><ol><li><p>进入仓库页面，点击顶栏的 <code>Settings</code> 按钮进入仓库设置。</p></li><li><p>页面往下拉找到 <code>github page</code> 选项</p><p><img src="https://img.sevth.com/website/2020/04/16/62ec272783ffb4614a1fb0e2755ef501.png" alt="image-20200416154642452"></p></li><li><p>一般配置的如果是这种域名仓库的形式，会自动打开这个配置选项。如果没有打开，手动打开一下就行了。</p><h4 id="自定义域名设置"><a href="#自定义域名设置" class="headerlink" title="自定义域名设置"></a>自定义域名设置</h4><ol><li><p>如果你有自己的域名，可以在 <code>Custom domain</code> 里面填入自己的域名。</p></li><li><p><code>github</code> 将在你的页面仓库根目录创建一个 <code>CNAME</code> 文件，你可以将这个文件下载下来，或者参照里面的内容自己写一个。</p></li><li><p>在你自己的 域名DNS提供商，创建一条<code>cname</code>记录，指向地址为 <code>&lt;user&gt;.github.io</code> (你的仓库github page域名)</p></li><li><p>等待解析生效，即可使用自定义域名访问。</p></li></ol><h4 id="如何避免每次发布时-CNAME-文件丢失"><a href="#如何避免每次发布时-CNAME-文件丢失" class="headerlink" title="如何避免每次发布时 CNAME 文件丢失"></a>如何避免每次发布时 <code>CNAME</code> 文件丢失</h4><ol><li>将<code>CNAME</code> 放到对应主题目录下的 <code>source</code>文件夹内。</li></ol><p>这样每次<code>hexo</code>解析的时候都会将 <code>CNMAE</code> 文件带上，<code>deploy</code> 也不成问题了。</p><ol start="2"><li><p>安装 插件</p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-cname --save</span><br></pre></td></tr></table></figure></div><p>之后在 <code>_config.yml</code> 文件中 <code>Plugins</code> 添加一条记录：</p><div class="highlight-container"><figure class=" highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Plugins:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-cname</span></span><br></pre></td></tr></table></figure></div><p><strong>Tips:</strong> 记得在配置文件中设置一下网站的 <code>url</code>，否则生成的文件域名可能有误，导致无法使用自定义域名访问。 </p></li></ol></li></ol><h2 id="配置deploy到rsync"><a href="#配置deploy到rsync" class="headerlink" title="配置deploy到rsync"></a>配置deploy到rsync</h2><h3 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h3><ol><li><p>安装rsync服务</p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install rsync</span><br></pre></td></tr></table></figure></div></li><li><p>编辑配置文件  (根据别人博客上的参考，hexo集成的rsync仅仅是使用了ssh底层传输)</p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/rsymcd.conf</span><br></pre></td></tr></table></figure></div><p>配置文件输入如下内容：</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">uid &#x3D; nobody</span><br><span class="line">gid &#x3D; nobody</span><br><span class="line">port &#x3D; 873 #不会使用到这个端口号，防火墙可以屏蔽它</span><br><span class="line">use chroot &#x3D; no</span><br><span class="line">max connections &#x3D; 10</span><br><span class="line">pid file &#x3D; &#x2F;var&#x2F;run&#x2F;rsyncd.pid</span><br><span class="line">lock file &#x3D; &#x2F;var&#x2F;run&#x2F;rsync.lock</span><br><span class="line">log file &#x3D; &#x2F;var&#x2F;log&#x2F;rsyncd.log</span><br></pre></td></tr></table></figure></div></li><li><p>启动服务</p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rsync --daemon</span><br></pre></td></tr></table></figure></div></li></ol><h3 id="hexo配置-1"><a href="#hexo配置-1" class="headerlink" title="hexo配置"></a>hexo配置</h3><ol><li><p>安装集成插件</p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-rsync --save</span><br></pre></td></tr></table></figure></div></li><li><p>编辑 <code>_config.yml</code> 配置文件，填入如下类似信息：</p><div class="highlight-container"><figure class=" highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">rsync</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">服务器host</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">ssh用户名</span></span><br><span class="line">  <span class="attr">root:</span> <span class="string">你的站点根目录</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">22</span> <span class="comment">#ssh端口号</span></span><br><span class="line">  <span class="attr">delete:</span> <span class="literal">true</span><span class="comment">#发布时是否删除旧文件</span></span><br><span class="line">  <span class="attr">verbose:</span> <span class="literal">true</span><span class="comment">#发布时显示详细的信息</span></span><br><span class="line">  <span class="attr">ignore_errors:</span> <span class="literal">false</span><span class="comment">#发布时忽略错误</span></span><br></pre></td></tr></table></figure></div></li><li><p>测试一下，使用 <code>hexo d</code> 看看是否能够发布成功。</p></li></ol><h3 id="使用SSH公钥，免输入密码"><a href="#使用SSH公钥，免输入密码" class="headerlink" title="使用SSH公钥，免输入密码"></a>使用SSH公钥，免输入密码</h3><ol><li><p>服务器配置秘钥连接 <code>SSH</code> 参考 <a href="#参考阅读">参考阅读</a></p></li><li><p>将能够正确连接 <code>SSH</code> 的秘钥写入系统默认配置中。默认系统秘钥文件地址在 <code>~/.ssh/id_rsa</code></p><p>你可以手动复制秘钥内容至该文件内，或者使用如下方式：</p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /path/to/private_rsa &gt; ~/.ssh/id_rsa<span class="comment">#将前面修改为你自己的秘钥文件保存地址，该操作将覆盖id_rsa文件内容，如果你在此步骤之前已经存在该文件，请注意备份保存</span></span><br><span class="line">chmod go-rwx ~/.ssh/id_rsa<span class="comment">#设置权限</span></span><br></pre></td></tr></table></figure></div></li><li><p>好了，全部配置完成后，你可以试验一下看看是否正常。</p></li></ol><h4 id="修改-hexo-的-deploy插件，自定义秘钥文件位置"><a href="#修改-hexo-的-deploy插件，自定义秘钥文件位置" class="headerlink" title="修改 hexo  的 deploy插件，自定义秘钥文件位置"></a>修改 <code>hexo</code>  的 <code>deploy</code>插件，自定义秘钥文件位置</h4><ol><li><p>进入 <code>hexo</code> 项目根目录，找到 <code>deployer.js</code> 文件 (文件位于 <code>node_modules/hexo-deployer-rsync/lib/deployer.js</code>)</p></li><li><p>修改如下：</p><div class="highlight-container"><figure class=" highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">... 省略其他代码</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">Object</span>.prototype.hasOwnProperty.call(args, <span class="string">'delete'</span>)) args.delete = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">Object</span>.prototype.hasOwnProperty.call(args, <span class="string">'verbose'</span>)) args.verbose = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">Object</span>.prototype.hasOwnProperty.call(args, <span class="string">'ignore_errors'</span>)) args.ignore_errors = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">Object</span>.prototype.hasOwnProperty.call(args, <span class="string">'key'</span>)) args.key = <span class="literal">false</span>;<span class="comment">//加入此条代码</span></span><br><span class="line"></span><br><span class="line"> ... 省略一段代码</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (args.port &amp;&amp; args.port &gt; <span class="number">0</span> &amp;&amp; args.port &lt; <span class="number">65536</span>) &#123;</span><br><span class="line">    params.splice(params.length - <span class="number">2</span>, <span class="number">0</span>, <span class="string">'-e'</span>);</span><br><span class="line">    <span class="keyword">if</span> (args.key) &#123;<span class="comment">//添加的代码</span></span><br><span class="line">      params.splice(params.length - <span class="number">2</span>, <span class="number">0</span>, <span class="string">`ssh -p <span class="subst">$&#123;args.port&#125;</span> -i <span class="subst">$&#123;args.key&#125;</span>`</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      params.splice(params.length - <span class="number">2</span>, <span class="number">0</span>, <span class="string">'ssh -p '</span> + args.port);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">... 省略之后代码</span><br></pre></td></tr></table></figure></div></li><li><p>在项目的配置文件<code>deploy</code> 添加一项 <code>key</code> 后面填写私钥地址，如下:</p><div class="highlight-container"><figure class=" highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">rsync</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">ip</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">root:</span> <span class="string">path</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">22</span></span><br><span class="line">  <span class="attr">delete:</span> <span class="literal">true</span><span class="string">/false</span></span><br><span class="line">  <span class="attr">verbose:</span> <span class="literal">true</span><span class="string">/false</span></span><br><span class="line">  <span class="attr">ignore_errors:</span> <span class="literal">true</span><span class="string">/false</span></span><br><span class="line">  <span class="attr">key:</span> <span class="string">~/.ssh/web_rsa</span></span><br></pre></td></tr></table></figure></div></li></ol><blockquote><p>Tips: 生成秘钥对的时候，不要输入私钥密码。可能会直接失败或者每次都要求输入密码。</p></blockquote><h2 id="配置同时发布"><a href="#配置同时发布" class="headerlink" title="配置同时发布"></a>配置同时发布</h2><p>编辑 <code>_config.yml</code> 文件，按照如下格式填写：</p><div class="highlight-container"><figure class=" highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">rsync</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">ip</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">用户名</span></span><br><span class="line">  <span class="attr">root:</span> <span class="string">站点根目录</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">22</span></span><br><span class="line">  <span class="attr">delete:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">verbose:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">ignore_errors:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">你的仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">'update article'</span></span><br></pre></td></tr></table></figure></div><p>测试一下。</p><p><img src="https://img.sevth.com/website/2020/04/16/3b01c439a14e88a77a980f3a2702071f.png" alt="image-20200416165646239"></p><h2 id="附件下载"><a href="#附件下载" class="headerlink" title="附件下载"></a>附件下载</h2><ol><li><a href="https://cdn.sevth.com/website/2020/04/16/bf86c2ab0d01da19e57817d3fb630317.zip">Git-2.26.1-64-bit</a></li></ol><h2 id="参考阅读"><a href="#参考阅读" class="headerlink" title="参考阅读"></a>参考阅读</h2><ol><li><a href="/go/?8">Github Page 自定义域名官方说明</a></li><li><a href="/go/?9">将Hexo部署到 GitHub Pages</a></li><li><a href="/go/?a">Hexo 一键部署</a></li><li><a href="/go/?b">hexo使用rsync部署发布</a></li><li><a href="/go/?c">设置 SSH 通过密钥登录</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;配置 &lt;code&gt;deploy&lt;/code&gt; 快速发布，免去手动上传的烦恼。&lt;/p&gt;
&lt;p&gt;配置多个 &lt;code&gt;deploy&lt;/code&gt; 同时发布，作镜像备份。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="technology" scheme="https://sevth.com/categories/technology/"/>
    
      <category term="website" scheme="https://sevth.com/categories/technology/website/"/>
    
    
      <category term="hexo" scheme="https://sevth.com/tags/hexo/"/>
    
      <category term="deploy" scheme="https://sevth.com/tags/deploy/"/>
    
      <category term="rsync" scheme="https://sevth.com/tags/rsync/"/>
    
  </entry>
  
  <entry>
    <title>如何优雅地用shell快速创作并发布</title>
    <link href="https://sevth.com/technology/shell/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E7%94%A8shell%E5%BF%AB%E9%80%9F%E5%88%9B%E4%BD%9C%E5%B9%B6%E5%8F%91%E5%B8%83.html"/>
    <id>https://sevth.com/technology/shell/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E7%94%A8shell%E5%BF%AB%E9%80%9F%E5%88%9B%E4%BD%9C%E5%B9%B6%E5%8F%91%E5%B8%83.html</id>
    <published>2020-04-15T19:54:40.000Z</published>
    <updated>2020-04-28T12:44:04.129Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>他来了他来了，他带着新造的东西过来了。(每天熬夜肝代码是不好的行为习惯，我决定，明天一定要早点睡！！!)</p><p>今天写的东西是一个<code>shell</code>，其实就是<code>hexo</code> 的一个辅助工具，之前每次写文章都要打开终端，然后 <code>cd</code>到路径再 <code>hexo new post</code>,然后又要从<code>finder</code> 打开一层一层的文件夹用<code>typora</code> 打开后才能开始写作。发布的时候，又要重复前面的两步，真的是烦得很，虽然官方给了<code>cli</code> 工具已经够方便了，<code>But</code> 我就是喜欢偷懒。</p></blockquote><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li><p>优雅，快速，无残留</p><p>虽然是用我一个晚上的时间速成写的，但是功能还是很ok的，目前只在我的<code>mac</code>实验了正常工作，对于其他 <code>linux</code> 并未作测试，当然， <code>windows</code>更加不能用。如果有需求的话，再考虑叭。</p></li><li><p>可拓展</p><p>扩展是基于官方的 <code>cli</code> 工具，也就是功能可以随着官方工具而扩展，但是目前只加入了我认为必要的一些功能，其他的正常使用时都鸡肋(我使用的时间觉得鸡肋)的功能肯定是没有的。</p></li><li><p>命令简单</p><p>没有花里胡哨的东西，你完全可以打简写快速执行一些操作，比如官方中有的 <code>hexo s</code> 也许可以加入组合功能？比如 <code>hexo g -d</code>。</p></li></ul><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p><img src="https://img.sevth.com/website/2020/04/16/0c8a117d7dbdf8e0334e2531cddfb712.png" alt="image-20200416041601166"></p><p>看图，使用<code>h</code> 或者 <code>help</code> 参数可以查看，目前基本支持的就这几个。功能与官方一致，说到这，有人就要问了，既然功能一致，那它有啥用？</p><h3 id="快速创建新文章"><a href="#快速创建新文章" class="headerlink" title="快速创建新文章"></a>快速创建新文章</h3><p>在命令行里直接回车就行了，或者配置好后，在桌面直接双击运行。运行后它长这样：</p><p><img src="https://img.sevth.com/website/2020/04/16/27e5c8e4506c4d5b41339897a8746d5f.png" alt="image-20200416042034744"></p><p>这里直接新建文章操作，实际上你可能只需要输入一个文章标题，其他的<code>shell</code> 会自动配置好。</p><h3 id="信息确认"><a href="#信息确认" class="headerlink" title="信息确认"></a>信息确认</h3><p>为了不让你多输几个字，所以默认只有数据回显，并不进行数据确认。</p><p>如下：</p><p><img src="https://img.sevth.com/website/2020/04/16/48fe110b7a18f71196aee6243281c6b8.png" alt="image-20200416042913300"></p><h3 id="快速写作"><a href="#快速写作" class="headerlink" title="快速写作"></a>快速写作</h3><p>基本上新建文章完成了之后会自动用 <code>typora</code> 打开。当然，如果你用其他的软件写作，那么它打开的就是你写作使用的默认软件了。</p><p><img src="https://img.sevth.com/website/2020/04/16/3b697eeca18a7976f32da0ff4ca2bb99.png" alt="image-20200416043257500"></p><h3 id="等待发布"><a href="#等待发布" class="headerlink" title="等待发布"></a>等待发布</h3><p>是的，它会在后台静静的等待你写作完成，然后问你要不要直接发布出去文章。前提是你已经配置好了 <code>Hexo</code> 的 <code>deploy</code> 配置。(预留坑位，配置hexo同时发布到git 和 rsync)</p><p><img src="https://img.sevth.com/website/2020/04/16/eeb063562ee8fde898b7593d826fdea0.png" alt="image-20200416040519480"></p><p><img src="https://img.sevth.com/website/2020/04/16/5ef67006bfeeea268add9d2e4f5242bd.png" alt="image-20200416044235017"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li>下载脚本</li></ul><p>github </p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o hexo https://raw.githubusercontent.com/sevth-developer/tools/master/shell/hexo.command &amp;&amp; chmod +x ./hexo</span><br></pre></td></tr></table></figure></div><p>本站</p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl - o hexo https://cdn.sevth.com/website/2020/04/16/282d18cf0e254da3d7c389b7c5854886.command &amp;&amp; chmod +x ./hexo</span><br></pre></td></tr></table></figure></div><ul><li>编辑默认 <code>hexo</code> 文件夹设置。</li></ul><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">""</span> <span class="string">"s:/Users/sevth/workspace/sevth:/Path/to/you/folder:g"</span> ./hexo</span><br></pre></td></tr></table></figure></div><p>这里替换时，将 <code>/Path/to/you/folder</code> 换成你的博客文件夹根目录，尾部不带 <code>/</code> ，然后执行上面这条命令即可。或者你也可以使用文本编辑器打开，手动修改 <code>base_path=</code>为你的文件夹地址。</p><ul><li>或者你也可以手动下载脚本文件，如下，请右键另存为。</li></ul><h2 id="附件下载："><a href="#附件下载：" class="headerlink" title="附件下载："></a>附件下载：</h2><p><a href="https://cdn.sevth.com/website/2020/04/16/282d18cf0e254da3d7c389b7c5854886.command">hexo</a></p><h2 id="反馈"><a href="#反馈" class="headerlink" title="反馈"></a>反馈</h2><ul><li>直接在本文下面留言</li><li>在 <code>github</code> 上提交<a href="/go/?e">issues</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;他来了他来了，他带着新造的东西过来了。(每天熬夜肝代码是不好的行为习惯，我决定，明天一定要早点睡！！!)&lt;/p&gt;
&lt;p&gt;今天写的东西是一个&lt;code&gt;shell&lt;/code&gt;，其实就是&lt;code&gt;hexo&lt;/code&gt; 的一个辅助工具，之前每次写文章都要打开终端，然后 &lt;code&gt;cd&lt;/code&gt;到路径再 &lt;code&gt;hexo new post&lt;/code&gt;,然后又要从&lt;code&gt;finder&lt;/code&gt; 打开一层一层的文件夹用&lt;code&gt;typora&lt;/code&gt; 打开后才能开始写作。发布的时候，又要重复前面的两步，真的是烦得很，虽然官方给了&lt;code&gt;cli&lt;/code&gt; 工具已经够方便了，&lt;code&gt;But&lt;/code&gt; 我就是喜欢偷懒。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="technology" scheme="https://sevth.com/categories/technology/"/>
    
      <category term="shell" scheme="https://sevth.com/categories/technology/shell/"/>
    
    
      <category term="hexo" scheme="https://sevth.com/tags/hexo/"/>
    
      <category term="shell" scheme="https://sevth.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>网站运行时间纠错(Date的不一样用法)</title>
    <link href="https://sevth.com/technology/javascript/%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%E7%BA%A0%E9%94%99(Date%E7%9A%84%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%94%A8%E6%B3%95).html"/>
    <id>https://sevth.com/technology/javascript/%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%E7%BA%A0%E9%94%99(Date%E7%9A%84%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%94%A8%E6%B3%95).html</id>
    <published>2020-04-15T05:26:56.000Z</published>
    <updated>2020-04-28T12:43:55.256Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>为了使网站引用的js代码更加规范，在对文件的整理过程中，发现了一个小小的 <code>Bug</code> ，网站底部的运行时间在分钟上居然差了几分钟，本着严谨的态度，开始了排错。</p></blockquote><a id="more"></a><h2 id="问题发现"><a href="#问题发现" class="headerlink" title="问题发现"></a>问题发现</h2><p><strong>网站运行时间</strong></p><p><img src="https://img.sevth.com/website/2020/04/15/ff7db44bfc35929d8ac5a1ee3bcc2fd0.png" alt="image-20200415132801070"></p><p><strong>本地时间</strong></p><p><img src="https://img.sevth.com/website/2020/04/15/f31a35e58bbd9b5ba6023607553845a3.png" alt="image-20200415132829840"></p><p>因为采用的开始计数时间是整点，那么计算的运行时间应该也是跟我们的本地时间相同的时间点。但是实际上相差了13分钟。</p><h2 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h2><h3 id="定位到问题点"><a href="#定位到问题点" class="headerlink" title="定位到问题点"></a>定位到问题点</h3><p><kbd>F12</kbd> 打开浏览器的控制台,使用鼠标工具直接选中运行时间一行，显示为如下：</p><div class="highlight-container"><figure class=" highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;span&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/statistics.js"</span>&gt;&lt;<span class="regexp">/script&gt;&lt;script&gt;var now = new Date();setInterval("createTime('2020/</span><span class="number">04</span>/<span class="number">08</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span><span class="string">')", 250,"");&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;span id="statistic-times"&gt;❤️本站自&lt;span&gt;&lt;strong&gt; 2020.04.08&lt;/strong&gt;&lt;span&gt; 已运行 &lt;strong&gt;7&lt;/strong&gt; 天 &lt;strong&gt;13&lt;/strong&gt; 小时 &lt;strong&gt;34&lt;/strong&gt; 分 &lt;strong&gt;48&lt;/strong&gt; 秒！❤️&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;/span&gt;</span></span><br></pre></td></tr></table></figure></div><p>主要分为两部分，上部分 <code>script</code> 使用定时器不停地调用函数，下面部分是 <code>id</code> 为 <code>statistic-times</code> 的文本标签。上面的脚本将数据插入到下面的文本标签中。</p><p>接下来，打开引入的 <code>js</code> 文件看一看。</p><div class="highlight-container"><figure class=" highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createTime</span>(<span class="params">time</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="keyword">new</span> <span class="built_in">Date</span>(time);</span><br><span class="line">    now.setTime(now.getTime() + <span class="number">250</span>),</span><br><span class="line">        days = (now - n) / <span class="number">1e3</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>,</span><br><span class="line">        dnum = <span class="built_in">Math</span>.floor(days),</span><br><span class="line">        hours = (now - n) / <span class="number">1e3</span> / <span class="number">60</span> / <span class="number">60</span> - <span class="number">24</span> * dnum,</span><br><span class="line">        hnum = <span class="built_in">Math</span>.floor(hours),</span><br><span class="line">    <span class="number">1</span> == <span class="built_in">String</span>(hnum).length &amp;&amp; (hnum = <span class="string">"0"</span> + hnum),</span><br><span class="line">        minutes = (now - n) / <span class="number">1e3</span> / <span class="number">60</span> - <span class="number">1440</span> * dnum - <span class="number">60</span> * hnum,</span><br><span class="line">        mnum = <span class="built_in">Math</span>.floor(minutes),</span><br><span class="line">    <span class="number">1</span> == <span class="built_in">String</span>(mnum).length &amp;&amp; (mnum = <span class="string">"0"</span> + mnum),</span><br><span class="line">        seconds = (now - n) / <span class="number">1e3</span> - <span class="number">86400</span> * dnum - <span class="number">3600</span> * hnum - <span class="number">60</span> * mnum,</span><br><span class="line">        snum = <span class="built_in">Math</span>.round(seconds),</span><br><span class="line">    <span class="number">1</span> == <span class="built_in">String</span>(snum).length &amp;&amp; (snum = <span class="string">"0"</span> + snum),</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"statistic-times"</span>).innerHTML = <span class="string">"❤️本站自&lt;span&gt;&lt;strong&gt; "</span>+time.split(<span class="string">" "</span>)[<span class="number">0</span>].replace(<span class="regexp">/\//g</span>,<span class="string">"."</span>)+<span class="string">"&lt;/strong&gt;&lt;span&gt; 已运行 &lt;strong&gt;"</span> + dnum + <span class="string">"&lt;/strong&gt; 天 &lt;strong&gt;"</span> + hnum + <span class="string">"&lt;/strong&gt; 小时 &lt;strong&gt;"</span> + mnum + <span class="string">"&lt;/strong&gt; 分 &lt;strong&gt;"</span> + snum + <span class="string">"&lt;/strong&gt; 秒！❤️"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>貌似代码写的都没啥问题，但是有点杂乱。并且发现一个小问题。 <code>now</code> 给的值是一个全局常量，并没有重新获取。然后发现产生的原因居然是，浏览器窗口被缩小之后，网页上的<code>js</code> 自然而然不再运行。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>最简单的办法就是在函数运行的时候，每次都重新取 <code>now</code> 值。</p><div class="highlight-container"><figure class=" highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createTime</span>(<span class="params">time</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="keyword">new</span> <span class="built_in">Date</span>(time);</span><br><span class="line">  <span class="keyword">let</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();<span class="comment">//添加此条到函数内部</span></span><br><span class="line">    now.setTime(now.getTime() + <span class="number">250</span>),</span><br><span class="line">      ...以下省略</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="优化写法"><a href="#优化写法" class="headerlink" title="优化写法"></a>优化写法</h2><p>感兴趣的话，研究一下 <code>Data</code> 的用法，我们可以将函数简化如下：</p><div class="highlight-container"><figure class=" highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SiteTimeFrom</span>(<span class="params">time</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> diffTime = <span class="keyword">new</span> <span class="built_in">Date</span>( <span class="keyword">new</span> <span class="built_in">Date</span>() - <span class="keyword">new</span> <span class="built_in">Date</span>(time));</span><br><span class="line">    <span class="keyword">let</span> day = <span class="built_in">Math</span>.floor(diffTime / <span class="number">24</span> /<span class="number">3.6e6</span>);</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"statistic-times"</span>).innerHTML = <span class="string">"❤️本站自&lt;span&gt;&lt;strong&gt; "</span>+time.split(<span class="string">" "</span>)[<span class="number">0</span>].replace(<span class="regexp">/\//g</span>,<span class="string">"."</span>)+<span class="string">"&lt;/strong&gt;&lt;span&gt; 已运行 &lt;strong&gt;"</span> + day + <span class="string">"&lt;/strong&gt; 天 &lt;strong&gt;"</span> + diffTime.getUTCHours() + <span class="string">"&lt;/strong&gt; 小时 &lt;strong&gt;"</span> + diffTime.getUTCMinutes() + <span class="string">"&lt;/strong&gt; 分 &lt;strong&gt;"</span> + diffTime.getUTCSeconds() + <span class="string">"&lt;/strong&gt; 秒！❤️"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h3><p>使用 <code>Date(dateTime)</code> 之类的写法，相当于 <code>Date().parse(dataTime)</code>。那么当我们将差值传进去构造一个 <code>Date</code> 对象时，它的时间就是从 <code>1970/01/01 00:00:00</code> 开始计算的。那么一天内的时间我们可以通过方法从该对象中获取，而天数计算仍然使用时间差算法，也就是 <code>timestamp</code> 除以 一天的 <code>24 * 3.6e6</code> 秒。</p><p><strong><em>注意：</em></strong> 获取小时的时候，应该用 <code>UTC</code> 的小时，不然 <code>Date</code> 对象会自动转换为本地时间，那么取值的时候就会相差8h。而分钟和秒都是一样的，使不使用 <code>UTC</code> 时间都行。<code>(getMinutes()、 getSeconds())</code></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;为了使网站引用的js代码更加规范，在对文件的整理过程中，发现了一个小小的 &lt;code&gt;Bug&lt;/code&gt; ，网站底部的运行时间在分钟上居然差了几分钟，本着严谨的态度，开始了排错。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="technology" scheme="https://sevth.com/categories/technology/"/>
    
      <category term="javascript" scheme="https://sevth.com/categories/technology/javascript/"/>
    
    
      <category term="javascript" scheme="https://sevth.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>如何使你的手机chrome浏览器自适应网站的夜间模式</title>
    <link href="https://sevth.com/technology/website/%E5%A6%82%E4%BD%95%E4%BD%BF%E4%BD%A0%E7%9A%84%E6%89%8B%E6%9C%BAchrome%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E9%80%82%E5%BA%94%E7%BD%91%E7%AB%99%E7%9A%84%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F.html"/>
    <id>https://sevth.com/technology/website/%E5%A6%82%E4%BD%95%E4%BD%BF%E4%BD%A0%E7%9A%84%E6%89%8B%E6%9C%BAchrome%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E9%80%82%E5%BA%94%E7%BD%91%E7%AB%99%E7%9A%84%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F.html</id>
    <published>2020-04-14T18:06:36.000Z</published>
    <updated>2020-04-28T12:43:32.951Z</updated>
    
    <content type="html"><![CDATA[<h2 id="啰里啰嗦"><a href="#啰里啰嗦" class="headerlink" title="啰里啰嗦"></a>啰里啰嗦</h2><blockquote><p>Mac 电脑系列在比较早(10.14 mojave)的时候就有了 <code>深色模式</code> ，这个模式在晚上使用的感觉是更加棒，以至于我现在任何时候都开着这个模式使用。当然，这个模式确实能够节能一些，但是并没有护眼的效果。所以，它仅仅是让你的眼睛看着舒服一些。当然，黑色的界面也显得很酷😎。</p></blockquote><a id="more"></a><h2 id="一些废话"><a href="#一些废话" class="headerlink" title="一些废话"></a>一些废话</h2><p>网站加入了夜间模式，当设置的时间到了之后，就会自动切换到夜间模式，使夜间浏览起来更舒适，那么，怎么让浏览器被动的跟着变黑呢？</p><h2 id="关键位置"><a href="#关键位置" class="headerlink" title="关键位置"></a>关键位置</h2><p>网站页面的 <code>head</code> 部分就是用来描述页面和加载一些脚本文件的。自从 <code>chrome</code> 39开始，<code>chrome</code> 浏览器支持网页中名为 <code>theme-color</code> 的 <code>meta</code> 标签。只要设置这一个标签，浏览器会随着设置的值改变标签栏的颜色。</p><p>类似的代码如下：</p><div class="highlight-container"><figure class=" highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"theme-color"</span> <span class="attr">content</span>=<span class="string">"#FFFFFF"</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><p>定位到我们网站的切换深夜模式的代码：</p><div class="highlight-container"><figure class=" highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">applyNight</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (value == <span class="string">'true'</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.body.className += <span class="string">' night'</span>;</span><br><span class="line">        nightIcon.className = nightIcon.className.replace(<span class="regexp">/ fa-moon/g</span>, <span class="string">''</span>) + <span class="string">' fa-sun'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.body.className = <span class="built_in">document</span>.body.className.replace(<span class="regexp">/ night/g</span>, <span class="string">''</span>)</span><br><span class="line">        nightIcon.className = nightIcon.className.replace(<span class="regexp">/ fa-sun/g</span>, <span class="string">''</span>) + <span class="string">' fa-moon'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//省略一堆代码，此处仅实例，单独使用无效</span></span><br></pre></td></tr></table></figure></div><p>核心代码就是判断传入值是否为真，这里传入的值是夜间模式的判断。因为 夜间模式的实现主要是依靠 <code>css</code>  的 <code>!important</code> 语法覆盖实现的，所以这里就只需要添加 <code>.night</code> 就可以了。</p><p>那么我们综合分析一下，这个应该插入到 <code>if</code> 循环中去。</p><p>原生 <code>js</code> 操作如下：</p><div class="highlight-container"><figure class=" highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c = <span class="built_in">document</span>.getElementsByName(<span class="string">'theme-color'</span>);</span><br><span class="line">c[<span class="number">0</span>].content = <span class="string">"#151313"</span>;</span><br></pre></td></tr></table></figure></div><p><code>getElementsByName</code> 方法返回的是一个数组，这里直接取下标 0 ，完整示例如下：</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var nightIcon &#x3D; document.getElementById(&#39;night-icon&#39;);</span><br><span class="line">var chrome_color &#x3D; document.getElementsByName(&#39;theme-color&#39;);</span><br><span class="line">function applyNight(value) &#123;</span><br><span class="line">    if (value &#x3D;&#x3D; &#39;true&#39;) &#123;</span><br><span class="line">        document.body.className +&#x3D; &#39; night&#39;;</span><br><span class="line">        nightIcon.className &#x3D; nightIcon.className.replace(&#x2F; fa-moon&#x2F;g, &#39;&#39;) + &#39; fa-sun&#39;;</span><br><span class="line">        chrome_color[0].content &#x3D; &quot;#151313&quot;; &#x2F;&#x2F;切换夜间模式 设置颜色值</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        document.body.className &#x3D; document.body.className.replace(&#x2F; night&#x2F;g, &#39;&#39;)</span><br><span class="line">        nightIcon.className &#x3D; nightIcon.className.replace(&#x2F; fa-sun&#x2F;g, &#39;&#39;) + &#39; fa-moon&#39;;</span><br><span class="line">        chrome_color[0].content &#x3D; &quot;#FFFFFF&quot;;&#x2F;&#x2F;切换回日间模式 设置颜色值</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="其他受支持的一些属性"><a href="#其他受支持的一些属性" class="headerlink" title="其他受支持的一些属性"></a>其他受支持的一些属性</h2><div class="highlight-container"><figure class=" highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// windows phone</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msapplication-navbutton-color"</span> <span class="attr">content</span>=<span class="string">"#FFF"</span>&gt;</span></span><br><span class="line">// ios safari</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span> <span class="attr">content</span>=<span class="string">"#FFF"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//浏览器卡片页图标</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon"</span> <span class="attr">href</span>=<span class="string">"/img/favicon.png"</span>/&gt;</span> //apple</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">sizes</span>=<span class="string">"192x192"</span> <span class="attr">href</span>=<span class="string">"/img/favicon.png"</span>/&gt;</span> //android</span><br></pre></td></tr></table></figure></div><p><strong>待后面整理完成了相关的文件，会将代码上传到<code>GitHub</code>上。</strong></p><h2 id="参考阅读"><a href="#参考阅读" class="headerlink" title="参考阅读"></a>参考阅读</h2><ul><li><a href="/go/?d">https://developers.google.com/web/updates/2014/11/Support-for-theme-color-in-Chrome-39-for-Android</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;啰里啰嗦&quot;&gt;&lt;a href=&quot;#啰里啰嗦&quot; class=&quot;headerlink&quot; title=&quot;啰里啰嗦&quot;&gt;&lt;/a&gt;啰里啰嗦&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Mac 电脑系列在比较早(10.14 mojave)的时候就有了 &lt;code&gt;深色模式&lt;/code&gt; ，这个模式在晚上使用的感觉是更加棒，以至于我现在任何时候都开着这个模式使用。当然，这个模式确实能够节能一些，但是并没有护眼的效果。所以，它仅仅是让你的眼睛看着舒服一些。当然，黑色的界面也显得很酷😎。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="technology" scheme="https://sevth.com/categories/technology/"/>
    
      <category term="website" scheme="https://sevth.com/categories/technology/website/"/>
    
    
      <category term="dark mode" scheme="https://sevth.com/tags/dark-mode/"/>
    
      <category term="website" scheme="https://sevth.com/tags/website/"/>
    
      <category term="html" scheme="https://sevth.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>Mac小技巧：更新失败怎么当做什么都没有发生过</title>
    <link href="https://sevth.com/Mac/tips/Mac%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E6%9B%B4%E6%96%B0%E5%A4%B1%E8%B4%A5%E6%80%8E%E4%B9%88%E5%BD%93%E5%81%9A%E4%BB%80%E4%B9%88%E9%83%BD%E6%B2%A1%E6%9C%89%E5%8F%91%E7%94%9F%E8%BF%87.html"/>
    <id>https://sevth.com/Mac/tips/Mac%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E6%9B%B4%E6%96%B0%E5%A4%B1%E8%B4%A5%E6%80%8E%E4%B9%88%E5%BD%93%E5%81%9A%E4%BB%80%E4%B9%88%E9%83%BD%E6%B2%A1%E6%9C%89%E5%8F%91%E7%94%9F%E8%BF%87.html</id>
    <published>2020-04-14T06:53:51.000Z</published>
    <updated>2020-04-26T10:37:19.903Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这篇文章仅针对于黑苹果用户，如果是白苹果，应该也是可以这么做的，本文仅提供参考，给一台非<code>mac</code>机器装上<code>Mac OS</code>系统称为黑苹果(hackintosh)，虽然这违反了苹果公司的最终用户许可协议(<a href="/go/?f">EULA</a>，但是这是一种极客体验的方式。我不推荐这么做，并且最终选择权在你手中。</p><p>系统更新失败怎么办？启动界面多了一个烦人的图标？</p></blockquote><a id="more"></a><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>最近 <code>Mac</code> 推送了<a href="/go/?g">2020-002 更新</a> 手贱点了更新按钮，然后开机的时候一直卡着进度条没动，只好重启电脑重新进系统，然而这个启动选项可是一直都在，真是讨厌😠。</p><h2 id="参考办法"><a href="#参考办法" class="headerlink" title="参考办法"></a>参考办法</h2><h3 id="使用软件修改-config-plist-，将启动项隐藏。（仅限黑苹果用户）-不推荐"><a href="#使用软件修改-config-plist-，将启动项隐藏。（仅限黑苹果用户）-不推荐" class="headerlink" title="使用软件修改 config.plist ，将启动项隐藏。（仅限黑苹果用户）(不推荐)"></a>使用软件修改 <code>config.plist</code> ，将启动项隐藏。（仅限黑苹果用户）(不推荐)</h3><ol><li><p>使用 <code>clover configurator</code> 软件，挂载分区</p><p><img src="https://img.sevth.com/website/2020/04/14/825bd574da168e172c831a37f90f6a63.png" alt="image-20200414153101431"></p></li><li><p><strong>修改 <code>引导界面</code> 设置</strong></p><p><img src="https://img.sevth.com/website/2020/04/14/6b63c7f9dcb82b2ca00c239d1a23881b.png" alt="image-20200414153333742"></p><p>添加一条记录，参照值为你在开机时看到的选项名称。</p></li><li><p>保存设置。</p></li></ol><h3 id="进入系统，删除更新安装文件（白苹果适用）（推荐）"><a href="#进入系统，删除更新安装文件（白苹果适用）（推荐）" class="headerlink" title="进入系统，删除更新安装文件（白苹果适用）（推荐）"></a>进入系统，删除更新安装文件（白苹果适用）（推荐）</h3><ol><li><p>打开终端软件（打开方法见：<a href="/Mac/tips/Mac小技巧：去掉更新设置小红点.html">点我查看</a>）</p></li><li><p>输入如下指令删除 <code>更新文件夹</code></p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -r /<span class="string">"Macos install data"</span></span><br></pre></td></tr></table></figure></div><p>中间需要输入密码，密码不显示。</p><p>如果提示文件夹不存在，就使用 <code>ls /</code> 指令查看一下根目录，有一个类似上面名称的文件夹，再输入上面的指令，替换成正确的文件夹名称执行即可。</p></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>无论白苹果还是黑苹果，在更新之前都应该使用时间机器做好备份，避免意外情况发生导致数据丢失！</li></ul><h3 id="可能用到的软件"><a href="#可能用到的软件" class="headerlink" title="可能用到的软件"></a>可能用到的软件</h3><p><a href="https://cdn.sevth.com/website/2020/04/14/ca90071a7d66ff9dead7e20be43b5697.zip">CloverConfigur5630</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这篇文章仅针对于黑苹果用户，如果是白苹果，应该也是可以这么做的，本文仅提供参考，给一台非&lt;code&gt;mac&lt;/code&gt;机器装上&lt;code&gt;Mac OS&lt;/code&gt;系统称为黑苹果(hackintosh)，虽然这违反了苹果公司的最终用户许可协议(&lt;a href=&quot;/go/?f&quot;&gt;EULA&lt;/a&gt;，但是这是一种极客体验的方式。我不推荐这么做，并且最终选择权在你手中。&lt;/p&gt;
&lt;p&gt;系统更新失败怎么办？启动界面多了一个烦人的图标？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Mac" scheme="https://sevth.com/categories/Mac/"/>
    
      <category term="tips" scheme="https://sevth.com/categories/Mac/tips/"/>
    
    
      <category term="Mac" scheme="https://sevth.com/tags/Mac/"/>
    
      <category term="clover" scheme="https://sevth.com/tags/clover/"/>
    
      <category term="hackintosh" scheme="https://sevth.com/tags/hackintosh/"/>
    
  </entry>
  
  <entry>
    <title>Mac小技巧：去掉更新设置小红点</title>
    <link href="https://sevth.com/Mac/tips/Mac%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%8E%BB%E6%8E%89%E6%9B%B4%E6%96%B0%E8%AE%BE%E7%BD%AE%E5%B0%8F%E7%BA%A2%E7%82%B9.html"/>
    <id>https://sevth.com/Mac/tips/Mac%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E5%8E%BB%E6%8E%89%E6%9B%B4%E6%96%B0%E8%AE%BE%E7%BD%AE%E5%B0%8F%E7%BA%A2%E7%82%B9.html</id>
    <published>2020-04-14T05:38:00.000Z</published>
    <updated>2020-04-26T10:35:31.059Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Mac 系统是苹果家的产品，自然而然地继承了苹果系列的一些“优点”，比如无时不刻在提醒着你更新，像是催命一样的提醒。假如我们并不想更新呢，或者已经更新了但是更新失败了怎么办？</p><p>Let’s Go!</p></blockquote><a id="more"></a><h2 id="讨厌的小红点就像下面一样"><a href="#讨厌的小红点就像下面一样" class="headerlink" title="讨厌的小红点就像下面一样"></a>讨厌的小红点就像下面一样</h2><p><img src="https://img.sevth.com/website/2020/04/14/4aa90e6de456543029873749af80bc97.png" alt="image-20200414140733567"></p><h2 id="操作指南"><a href="#操作指南" class="headerlink" title="操作指南"></a>操作指南</h2><h3 id="关闭系统的更新提醒"><a href="#关闭系统的更新提醒" class="headerlink" title="关闭系统的更新提醒"></a>关闭系统的更新提醒</h3><blockquote><p>打开设置-&gt;软件更新-&gt;高级-&gt;取消所有勾选 ☑️</p></blockquote><p>如下：</p><p><img src="https://img.sevth.com/website/2020/04/14/b050b4871fa037072baf7297e76a1557.png" alt="image-20200414141615901"></p><p>取消掉所有选项后，就不会自动检查更新，也不会提示你更新了。</p><h3 id="关闭小红点"><a href="#关闭小红点" class="headerlink" title="关闭小红点"></a>关闭小红点</h3><ol><li><p>打开启动台</p></li><li><p>直接输入 <code>ter</code> 搜索终端软件</p><p><img src="https://img.sevth.com/website/2020/04/14/74a06eac5979e44ec785ac541e666a42.png" alt="image-20200414143416202"></p></li><li><p>打开终端工具，输入如下的指令到终端</p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.systempreferences AttentionPrefBundleIDs 0</span><br></pre></td></tr></table></figure></div></li><li><p>重启 <code>Dock</code> （可选）</p><p>这个操作可以快速见效，就是桌面底部的 <code>Dock</code> 不再显示小红点。</p><div class="highlight-container"><figure class=" highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall Dock   //注意大小写</span><br></pre></td></tr></table></figure></div></li><li><p>终极消除办法：重启电脑。将在设置界面也去掉小红点，只要不点开更新，一直有效。</p><p>相关指令输入参考：</p><p><img src="https://img.sevth.com/website/2020/04/14/644eff96d0546c649662d2b332bec825.png" alt="image-20200414144236479"></p><p>最终效果如下：</p><p><img src="https://img.sevth.com/website/2020/04/14/d3af2b56a9683993451d1f4921988f73.png" alt="image-20200414144553294"></p><p><img src="https://img.sevth.com/website/2020/04/14/630004aab6aeeb687c1ab16743157f66.png" alt="image-20200414144640675"></p><p><img src="https://img.sevth.com/website/2020/04/14/ac75111c43cca711220e4d8c07652b88.png" alt="image-20200414144614063"></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Mac 系统是苹果家的产品，自然而然地继承了苹果系列的一些“优点”，比如无时不刻在提醒着你更新，像是催命一样的提醒。假如我们并不想更新呢，或者已经更新了但是更新失败了怎么办？&lt;/p&gt;
&lt;p&gt;Let’s Go!&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Mac" scheme="https://sevth.com/categories/Mac/"/>
    
      <category term="tips" scheme="https://sevth.com/categories/Mac/tips/"/>
    
    
      <category term="Mac" scheme="https://sevth.com/tags/Mac/"/>
    
      <category term="hackintosh" scheme="https://sevth.com/tags/hackintosh/"/>
    
  </entry>
  
  <entry>
    <title>“Markdown编辑器语法指南”</title>
    <link href="https://sevth.com/reprint/Markdown%E7%BC%96%E8%BE%91%E5%99%A8%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97.html"/>
    <id>https://sevth.com/reprint/Markdown%E7%BC%96%E8%BE%91%E5%99%A8%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97.html</id>
    <published>2020-04-10T14:33:01.000Z</published>
    <updated>2020-04-16T11:22:31.854Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Markdown是一种可以使用普通文本编辑器编写的<a href="https://baike.baidu.com/item/标记语言/5964436">标记语言</a>，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p></blockquote><blockquote><p>Tips: 本文仅方便自己学习作保存之用，<a href="https://segmentfault.com/markdown">点我阅读原文</a></p></blockquote><a id="more"></a><h1 id="Markdown-编辑器语法指南"><a href="#Markdown-编辑器语法指南" class="headerlink" title="Markdown 编辑器语法指南"></a>Markdown 编辑器语法指南</h1><h2 id="基本技巧"><a href="#基本技巧" class="headerlink" title="基本技巧"></a>基本技巧</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>如果你只想高亮语句中的某个函数名或关键字，可以使用 <code>function_name()</code> 实现</p><p>通常编辑器根据代码片段适配合适的高亮方法，但你也可以用 ````` 包裹一段代码，并指定一种语言</p><div class="highlight-container"><figure class=" highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`javascript</span></span><br><span class="line"><span class="string">$(document).ready(function () &#123;</span></span><br><span class="line"><span class="string">    alert('hello world');</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span></span><br></pre></td></tr></table></figure></div><p>支持的语言：<code>1c, abnf, accesslog, actionscript, ada, apache, applescript, arduino, armasm, asciidoc, aspectj, autohotkey, autoit, avrasm, awk, axapta, bash, basic, bnf, brainfuck, cal, capnproto, ceylon, clean, clojure, clojure-repl, cmake, coffeescript, coq, cos, cpp, crmsh, crystal, cs, csp, css, d, dart, delphi, diff, django, dns, dockerfile, dos, dsconfig, dts, dust, ebnf, elixir, elm, erb, erlang, erlang-repl, excel, fix, flix, fortran, fsharp, gams, gauss, gcode, gherkin, glsl, go, golo, gradle, groovy, haml, handlebars, haskell, haxe, hsp, htmlbars, http, hy, inform7, ini, irpf90, java, javascript, json, julia, kotlin, lasso, ldif, leaf, less, lisp, livecodeserver, livescript, llvm, lsl, lua, makefile, markdown, mathematica, matlab, maxima, mel, mercury, mipsasm, mizar, mojolicious, monkey, moonscript, n1ql, nginx, nimrod, nix, nsis, objectivec, ocaml, openscad, oxygene, parser3, perl, pf, php, pony, powershell, processing, profile, prolog, protobuf, puppet, purebasic, python, q, qml, r, rib, roboconf, rsl, ruby, ruleslanguage, rust, scala, scheme, scilab, scss, smali, smalltalk, sml, sqf, sql, stan, stata, step21, stylus, subunit, swift, taggerscript, tap, tcl, tex, thrift, tp, twig, typescript, vala, vbnet, vbscript, vbscript-html, verilog, vhdl, vim, x86asm, xl, xml, xquery, yaml, zephir</code></p><p>也可以使用 4 空格缩进，再贴上代码，实现相同的的效果</p><div class="highlight-container"><figure class=" highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">g</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">from</span> range(x, <span class="number">0</span>, <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">yield</span> <span class="keyword">from</span> range(x)</span><br></pre></td></tr></table></figure></div><p>如你不需要代码高亮，可以用下面的方法禁用：</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(&#96;&#96;&#96;)nohighlight</span><br><span class="line">(&#96;&#96;&#96;)              &#x2F;&#x2F;网页解析问题，所以将(&#96;&#96;&#96;)括起来，实际上不需要()</span><br></pre></td></tr></table></figure></div><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>文章内容较多时，可以用标题分段：</p> <div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">标题1</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">标题2</span><br><span class="line">-----</span><br><span class="line"></span><br><span class="line">## 大标题 ##</span><br><span class="line">### 小标题 ###</span><br></pre></td></tr></table></figure></div><h3 id="粗斜体"><a href="#粗斜体" class="headerlink" title="粗斜体"></a>粗斜体</h3><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*斜体文本*    _斜体文本_</span><br><span class="line">**粗体文本**    __粗体文本__</span><br><span class="line">***粗斜体文本***    ___粗斜体文本___</span><br></pre></td></tr></table></figure></div><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>常用链接方法</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文字链接 [链接名称](http:&#x2F;&#x2F;链接网址)</span><br><span class="line">网址链接 &lt;http:&#x2F;&#x2F;链接网址&gt;</span><br></pre></td></tr></table></figure></div><p>高级链接技巧</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [Google][1].</span><br><span class="line">这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo].</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">[1]: http:&#x2F;&#x2F;www.google.com&#x2F;</span><br><span class="line">[yahoo]: http:&#x2F;&#x2F;www.yahoo.com&#x2F;</span><br></pre></td></tr></table></figure></div><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>普通无序列表</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 列表文本前使用 [减号+空格]</span><br><span class="line">+ 列表文本前使用 [加号+空格]</span><br><span class="line">* 列表文本前使用 [星号+空格]</span><br></pre></td></tr></table></figure></div><p>普通有序列表</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 列表前使用 [数字+空格]</span><br><span class="line">2. 我们会自动帮你添加数字</span><br><span class="line">7. 不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3</span><br></pre></td></tr></table></figure></div><p>列表嵌套</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1. 列出所有元素：</span><br><span class="line">    - 无序列表元素 A</span><br><span class="line">        1. 元素 A 的有序子列表</span><br><span class="line">    - 前面加四个空格</span><br><span class="line">2. 列表里的多段换行：</span><br><span class="line">    前面必须加四个空格，</span><br><span class="line">    这样换行，整体的格式不会乱</span><br><span class="line">3. 列表里引用：</span><br><span class="line"></span><br><span class="line">    &gt; 前面空一行</span><br><span class="line">    &gt; 仍然需要在 &gt;  前面加四个空格</span><br><span class="line"></span><br><span class="line">4. 列表里代码段：</span><br><span class="line"></span><br><span class="line">(&#96;&#96;&#96;)</span><br><span class="line">    前面四个空格，之后按代码语法 (&#96;&#96;&#96;) 书写</span><br><span class="line">(&#96;&#96;&#96;)</span><br><span class="line"></span><br><span class="line">        或者直接空八个，引入代码块</span><br></pre></td></tr></table></figure></div><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>普通引用</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 引用文本前使用 [大于号+空格]</span><br><span class="line">&gt; 折行可以不加，新起一行都要加上哦</span><br></pre></td></tr></table></figure></div><p>引用里嵌套引用</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 最外层引用</span><br><span class="line">&gt; &gt; 多一个 &gt; 嵌套一层引用</span><br><span class="line">&gt; &gt;</span><br><span class="line">&gt; &gt; &gt; 可以嵌套很多层</span><br></pre></td></tr></table></figure></div><p>引用里嵌套列表</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; - 这是引用里嵌套的一个列表</span><br><span class="line">&gt; - 还可以有子列表</span><br><span class="line">&gt;     * 子列表需要从 - 之后延后四个空格开始</span><br></pre></td></tr></table></figure></div><p>引用里嵌套代码块</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;     同样的，在前面加四个空格形成代码块</span><br><span class="line">&gt;  </span><br><span class="line">&gt; (&#96;&#96;&#96;)</span><br><span class="line">&gt; 或者使用 (&#96;&#96;&#96;) 形成代码块</span><br><span class="line">&gt; (&#96;&#96;&#96;)</span><br></pre></td></tr></table></figure></div><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>跟链接的方法区别在于前面加了个感叹号 <code>!</code>，这样是不是觉得好记多了呢？</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片名称](http:&#x2F;&#x2F;图片网址)</span><br></pre></td></tr></table></figure></div><p>当然，你也可以像网址那样对图片网址使用变量</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [Google][1].</span><br><span class="line">然后在文档的结尾位变量赋值（网址）</span><br><span class="line"></span><br><span class="line">[1]: http:&#x2F;&#x2F;www.google.com&#x2F;logo.png</span><br></pre></td></tr></table></figure></div><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><p>如果另起一行，只需在当前行结尾加 2 个空格</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在当前行的结尾加 2 个空格  </span><br><span class="line">这行就会新起一行</span><br></pre></td></tr></table></figure></div><p>如果是要起一个新段落，只需要空出一行即可。</p><h3 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h3><p>如果你有写分割线的习惯，可以新起一行输入三个减号<code>-</code>。当前后都有段落时，请空出一行：</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">前面的段落</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">后面的段落</span><br></pre></td></tr></table></figure></div><h2 id="高级技巧"><a href="#高级技巧" class="headerlink" title="高级技巧"></a>高级技巧</h2><h3 id="行内-HTML-元素"><a href="#行内-HTML-元素" class="headerlink" title="行内 HTML 元素"></a>行内 HTML 元素</h3><p>目前只支持部分段内 HTML 元素效果，包括 <code></code> ，如</p><p>键位显示</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 &lt;kbd&gt;Ctrl&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Alt&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Del&lt;&#x2F;kbd&gt; 重启电脑</span><br></pre></td></tr></table></figure></div><p>代码块</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 &lt;pre&gt;&lt;&#x2F;pre&gt; 元素同样可以形成代码块</span><br></pre></td></tr></table></figure></div><p>粗斜体</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt; Markdown 在此处同样适用，如 *加粗* &lt;&#x2F;b&gt;</span><br></pre></td></tr></table></figure></div><h3 id="符号转义"><a href="#符号转义" class="headerlink" title="符号转义"></a>符号转义</h3><p>如果你的描述中需要用到 markdown 的符号，比如 <code>_</code> <code>#</code> <code>*</code> 等，但又不想它被转义，这时候可以在这些符号前加反斜杠，如 <code>\_</code> <code>\#</code> <code>\*</code> 进行避免。</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\_不想这里的文本变斜体\_</span><br><span class="line">\*\*不想这里的文本被加粗\*\*</span><br></pre></td></tr></table></figure></div><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p>支持 <strong>jsfiddle、gist、runjs、优酷视频</strong>，直接填写 url，在其之后会自动添加预览点击会展开相关内容。</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;&#123;url_of_the_fiddle&#125;&#x2F;embedded&#x2F;[&#123;tabs&#125;&#x2F;[&#123;style&#125;]]&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;gist.github.com&#x2F;&#123;gist_id&#125;</span><br><span class="line">http:&#x2F;&#x2F;runjs.cn&#x2F;detail&#x2F;&#123;id&#125;</span><br><span class="line">http:&#x2F;&#x2F;v.youku.com&#x2F;v_show&#x2F;id_&#123;video_id&#125;.html</span><br></pre></td></tr></table></figure></div><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$ x &#x3D; &#123;-b \pm \sqrt&#123;b^2-4ac&#125; \over 2a&#125;. $$</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">x \href&#123;why-equal.html&#125;&#123;&#x3D;&#125; y^2 + 1</span><br><span class="line">$$</span><br></pre></td></tr></table></figure></div><p>同时也支持 HTML 属性，如：</p><div class="highlight-container"><figure class=" highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$ (x+1)^2 &#x3D; \class&#123;hidden&#125;&#123;(x+1)(x+1)&#125; $$</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">(x+1)^2 &#x3D; \cssId&#123;step1&#125;&#123;\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Markdown是一种可以使用普通文本编辑器编写的&lt;a href=&quot;https://baike.baidu.com/item/标记语言/5964436&quot;&gt;标记语言&lt;/a&gt;，通过简单的标记语法，它可以使普通文本内容具有一定的格式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Tips: 本文仅方便自己学习作保存之用，&lt;a href=&quot;https://segmentfault.com/markdown&quot;&gt;点我阅读原文&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="reprint" scheme="https://sevth.com/categories/reprint/"/>
    
    
      <category term="markdown" scheme="https://sevth.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配合CDN使用源站被暴露的问题</title>
    <link href="https://sevth.com/technology/website/Nginx%E9%85%8D%E5%90%88CDN%E4%BD%BF%E7%94%A8%E6%BA%90%E7%AB%99%E8%A2%AB%E6%9A%B4%E9%9C%B2%E7%9A%84%E9%97%AE%E9%A2%98.html"/>
    <id>https://sevth.com/technology/website/Nginx%E9%85%8D%E5%90%88CDN%E4%BD%BF%E7%94%A8%E6%BA%90%E7%AB%99%E8%A2%AB%E6%9A%B4%E9%9C%B2%E7%9A%84%E9%97%AE%E9%A2%98.html</id>
    <published>2020-04-10T12:02:17.000Z</published>
    <updated>2020-04-26T10:23:44.844Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote><p><code>CDN</code> 即内容分发网络，<code>CDN</code>依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能，使用户就近获取所需的内容，降低网络阻塞，提高用户访问响应速度和命中率。                – 引用自<a href="/go/?6">《百度百科》</a></p><p><code>CDN</code>不仅具有加速的效果，更重要的是，保护源站安全，隐藏真实的源站信息。</p></blockquote><a id="more"></a><h4 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h4><p>在本博客部署之后，<code>CDN</code> 也用上了，然而出现了奇奇怪怪的问题。比如点击菜单栏的时候，自动跳转到源站域名去了，纳尼。这怎么能忍，于是敲开了 <code>Chrome</code> 的开发者工具（<kbd>F12</kbd> 打开）。 <code>Network</code> 选项卡查看到如下信息:</p><img src="https://img.sevth.com/website/2020/04/10/322cbc7aaf1a69d92e7dd73a5edbe52e.png" alt="image-20200410170952004" style="zoom: 67%;" /><h5 id="从图中看得到的信息"><a href="#从图中看得到的信息" class="headerlink" title="从图中看得到的信息"></a>从图中看得到的信息</h5><div class="highlight-container"><figure class=" highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">request</span>: https://sevth.com/music -&gt; response: https://xxxxxx/music/</span><br></pre></td></tr></table></figure></div><h5 id="我们可以知道的一些事情"><a href="#我们可以知道的一些事情" class="headerlink" title="我们可以知道的一些事情"></a>我们可以知道的一些事情</h5><p>首先，排除掉是 <code>CDN</code> 网络返回该状态码，一般情况下，<code>CDN</code>响应的内容都是根据源站的内容来响应的，不会主动响应某些内容。</p><p>然后我登录到服务查看 <code>Nginx</code> 日志，发现大量的 <code>301</code> 重定向。</p><p><img src="https://img.sevth.com/website/2020/04/10/6401a2da96471dda344e5ca1d6084b34.png" alt="image-20200410214208446"></p><p>这两条的记录区别就是，末尾带 <code>/</code> 的请求通过了，不带的被 <code>301</code> 重定向了，而且被重定向的地址还是绝对地址。</p><p>经过一番百度得知：</p><blockquote><p>Nginx主动设置301 Moved Permanently状态码只有一种情况，当用户输入了一个url地址，最后的部分是一个文件目录。比如 <code>http://www.test.com/index</code>, Nginx在运行过程中没有找到index这个文件，但发现了index是个目录。于是本次访问的状态码就会被设置成301 Moved Permanently。</p></blockquote><h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><p>知道了原因后，解决就简单了，让 <code>Nginx</code> 不返回绝对地址，返回相对地址不就行了呗。</p><div class="highlight-container"><figure class=" highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    <span class="attribute">absolute_redirect</span> <span class="literal">off</span>;</span><br><span class="line">    </span><br><span class="line">    // 其它配置...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h4><p><img src="https://img.sevth.com/website/2020/04/10/7cdae9beadd9719f27026b274ee1be71.png" alt="image-20200410172154141"></p><p>这样就完美的解决了问题。</p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><blockquote><p>参考链接: <a href="/go/?7">Nginx默认配置导致CDN源站泄露</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;CDN&lt;/code&gt; 即内容分发网络，&lt;code&gt;CDN&lt;/code&gt;依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能，使用户就近获取所需的内容，降低网络阻塞，提高用户访问响应速度和命中率。                – 引用自&lt;a href=&quot;/go/?6&quot;&gt;《百度百科》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CDN&lt;/code&gt;不仅具有加速的效果，更重要的是，保护源站安全，隐藏真实的源站信息。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="technology" scheme="https://sevth.com/categories/technology/"/>
    
      <category term="website" scheme="https://sevth.com/categories/technology/website/"/>
    
    
      <category term="Nginx" scheme="https://sevth.com/tags/Nginx/"/>
    
      <category term="CDN" scheme="https://sevth.com/tags/CDN/"/>
    
  </entry>
  
</feed>
