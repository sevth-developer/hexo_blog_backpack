<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sevth的小破站</title>
  
  <subtitle>一个野生coder</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sevth.com/"/>
  <updated>2020-04-10T22:49:13.728Z</updated>
  <id>https://sevth.com/</id>
  
  <author>
    <name>sevth</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>“Markdown编辑器语法指南”</title>
    <link href="https://sevth.com/reprint/Markdown%E7%BC%96%E8%BE%91%E5%99%A8%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97.html"/>
    <id>https://sevth.com/reprint/Markdown%E7%BC%96%E8%BE%91%E5%99%A8%E8%AF%AD%E6%B3%95%E6%8C%87%E5%8D%97.html</id>
    <published>2020-04-10T14:33:01.000Z</published>
    <updated>2020-04-10T22:49:13.728Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Markdown是一种可以使用普通文本编辑器编写的<a href="https://baike.baidu.com/item/标记语言/5964436">标记语言</a>，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p></blockquote><blockquote><p>Tips: 本文仅方便自己学习作保存之用，<a href="https://segmentfault.com/markdown">点我阅读原文</a></p></blockquote><a id="more"></a><h1 id="Markdown-编辑器语法指南"><a href="#Markdown-编辑器语法指南" class="headerlink" title="Markdown 编辑器语法指南"></a>Markdown 编辑器语法指南</h1><h2 id="基本技巧"><a href="#基本技巧" class="headerlink" title="基本技巧"></a>基本技巧</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>如果你只想高亮语句中的某个函数名或关键字，可以使用 <code>function_name()</code> 实现</p><p>通常编辑器根据代码片段适配合适的高亮方法，但你也可以用 ````` 包裹一段代码，并指定一种语言</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`javascript</span></span><br><span class="line"><span class="string">$(document).ready(function () &#123;</span></span><br><span class="line"><span class="string">    alert('hello world');</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span></span><br></pre></td></tr></table></figure><p>支持的语言：<code>1c, abnf, accesslog, actionscript, ada, apache, applescript, arduino, armasm, asciidoc, aspectj, autohotkey, autoit, avrasm, awk, axapta, bash, basic, bnf, brainfuck, cal, capnproto, ceylon, clean, clojure, clojure-repl, cmake, coffeescript, coq, cos, cpp, crmsh, crystal, cs, csp, css, d, dart, delphi, diff, django, dns, dockerfile, dos, dsconfig, dts, dust, ebnf, elixir, elm, erb, erlang, erlang-repl, excel, fix, flix, fortran, fsharp, gams, gauss, gcode, gherkin, glsl, go, golo, gradle, groovy, haml, handlebars, haskell, haxe, hsp, htmlbars, http, hy, inform7, ini, irpf90, java, javascript, json, julia, kotlin, lasso, ldif, leaf, less, lisp, livecodeserver, livescript, llvm, lsl, lua, makefile, markdown, mathematica, matlab, maxima, mel, mercury, mipsasm, mizar, mojolicious, monkey, moonscript, n1ql, nginx, nimrod, nix, nsis, objectivec, ocaml, openscad, oxygene, parser3, perl, pf, php, pony, powershell, processing, profile, prolog, protobuf, puppet, purebasic, python, q, qml, r, rib, roboconf, rsl, ruby, ruleslanguage, rust, scala, scheme, scilab, scss, smali, smalltalk, sml, sqf, sql, stan, stata, step21, stylus, subunit, swift, taggerscript, tap, tcl, tex, thrift, tp, twig, typescript, vala, vbnet, vbscript, vbscript-html, verilog, vhdl, vim, x86asm, xl, xml, xquery, yaml, zephir</code></p><p>也可以使用 4 空格缩进，再贴上代码，实现相同的的效果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">g</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">from</span> range(x, <span class="number">0</span>, <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">yield</span> <span class="keyword">from</span> range(x)</span><br></pre></td></tr></table></figure><p>如你不需要代码高亮，可以用下面的方法禁用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(&#96;&#96;&#96;)nohighlight</span><br><span class="line">(&#96;&#96;&#96;)              &#x2F;&#x2F;网页解析问题，所以将(&#96;&#96;&#96;)括起来，实际上不需要()</span><br></pre></td></tr></table></figure><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>文章内容较多时，可以用标题分段：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">标题1</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">标题2</span><br><span class="line">-----</span><br><span class="line"></span><br><span class="line">## 大标题 ##</span><br><span class="line">### 小标题 ###</span><br></pre></td></tr></table></figure><h3 id="粗斜体"><a href="#粗斜体" class="headerlink" title="粗斜体"></a>粗斜体</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*斜体文本*    _斜体文本_</span><br><span class="line">**粗体文本**    __粗体文本__</span><br><span class="line">***粗斜体文本***    ___粗斜体文本___</span><br></pre></td></tr></table></figure><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>常用链接方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文字链接 [链接名称](http:&#x2F;&#x2F;链接网址)</span><br><span class="line">网址链接 &lt;http:&#x2F;&#x2F;链接网址&gt;</span><br></pre></td></tr></table></figure><p>高级链接技巧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [Google][1].</span><br><span class="line">这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo].</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">[1]: http:&#x2F;&#x2F;www.google.com&#x2F;</span><br><span class="line">[yahoo]: http:&#x2F;&#x2F;www.yahoo.com&#x2F;</span><br></pre></td></tr></table></figure><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>普通无序列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 列表文本前使用 [减号+空格]</span><br><span class="line">+ 列表文本前使用 [加号+空格]</span><br><span class="line">* 列表文本前使用 [星号+空格]</span><br></pre></td></tr></table></figure><p>普通有序列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 列表前使用 [数字+空格]</span><br><span class="line">2. 我们会自动帮你添加数字</span><br><span class="line">7. 不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3</span><br></pre></td></tr></table></figure><p>列表嵌套</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1. 列出所有元素：</span><br><span class="line">    - 无序列表元素 A</span><br><span class="line">        1. 元素 A 的有序子列表</span><br><span class="line">    - 前面加四个空格</span><br><span class="line">2. 列表里的多段换行：</span><br><span class="line">    前面必须加四个空格，</span><br><span class="line">    这样换行，整体的格式不会乱</span><br><span class="line">3. 列表里引用：</span><br><span class="line"></span><br><span class="line">    &gt; 前面空一行</span><br><span class="line">    &gt; 仍然需要在 &gt;  前面加四个空格</span><br><span class="line"></span><br><span class="line">4. 列表里代码段：</span><br><span class="line"></span><br><span class="line">(&#96;&#96;&#96;)</span><br><span class="line">    前面四个空格，之后按代码语法 (&#96;&#96;&#96;) 书写</span><br><span class="line">(&#96;&#96;&#96;)</span><br><span class="line"></span><br><span class="line">        或者直接空八个，引入代码块</span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>普通引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 引用文本前使用 [大于号+空格]</span><br><span class="line">&gt; 折行可以不加，新起一行都要加上哦</span><br></pre></td></tr></table></figure><p>引用里嵌套引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 最外层引用</span><br><span class="line">&gt; &gt; 多一个 &gt; 嵌套一层引用</span><br><span class="line">&gt; &gt;</span><br><span class="line">&gt; &gt; &gt; 可以嵌套很多层</span><br></pre></td></tr></table></figure><p>引用里嵌套列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; - 这是引用里嵌套的一个列表</span><br><span class="line">&gt; - 还可以有子列表</span><br><span class="line">&gt;     * 子列表需要从 - 之后延后四个空格开始</span><br></pre></td></tr></table></figure><p>引用里嵌套代码块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;     同样的，在前面加四个空格形成代码块</span><br><span class="line">&gt;  </span><br><span class="line">&gt; (&#96;&#96;&#96;)</span><br><span class="line">&gt; 或者使用 (&#96;&#96;&#96;) 形成代码块</span><br><span class="line">&gt; (&#96;&#96;&#96;)</span><br></pre></td></tr></table></figure><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>跟链接的方法区别在于前面加了个感叹号 <code>!</code>，这样是不是觉得好记多了呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片名称](http:&#x2F;&#x2F;图片网址)</span><br></pre></td></tr></table></figure><p>当然，你也可以像网址那样对图片网址使用变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [Google][1].</span><br><span class="line">然后在文档的结尾位变量赋值（网址）</span><br><span class="line"></span><br><span class="line">[1]: http:&#x2F;&#x2F;www.google.com&#x2F;logo.png</span><br></pre></td></tr></table></figure><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><p>如果另起一行，只需在当前行结尾加 2 个空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在当前行的结尾加 2 个空格  </span><br><span class="line">这行就会新起一行</span><br></pre></td></tr></table></figure><p>如果是要起一个新段落，只需要空出一行即可。</p><h3 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h3><p>如果你有写分割线的习惯，可以新起一行输入三个减号<code>-</code>。当前后都有段落时，请空出一行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">前面的段落</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">后面的段落</span><br></pre></td></tr></table></figure><h2 id="高级技巧"><a href="#高级技巧" class="headerlink" title="高级技巧"></a>高级技巧</h2><h3 id="行内-HTML-元素"><a href="#行内-HTML-元素" class="headerlink" title="行内 HTML 元素"></a>行内 HTML 元素</h3><p>目前只支持部分段内 HTML 元素效果，包括 <code></code> ，如</p><p>键位显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 &lt;kbd&gt;Ctrl&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Alt&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Del&lt;&#x2F;kbd&gt; 重启电脑</span><br></pre></td></tr></table></figure><p>代码块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 &lt;pre&gt;&lt;&#x2F;pre&gt; 元素同样可以形成代码块</span><br></pre></td></tr></table></figure><p>粗斜体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt; Markdown 在此处同样适用，如 *加粗* &lt;&#x2F;b&gt;</span><br></pre></td></tr></table></figure><h3 id="符号转义"><a href="#符号转义" class="headerlink" title="符号转义"></a>符号转义</h3><p>如果你的描述中需要用到 markdown 的符号，比如 <code>_</code> <code>#</code> <code>*</code> 等，但又不想它被转义，这时候可以在这些符号前加反斜杠，如 <code>\_</code> <code>\#</code> <code>\*</code> 进行避免。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\_不想这里的文本变斜体\_</span><br><span class="line">\*\*不想这里的文本被加粗\*\*</span><br></pre></td></tr></table></figure><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p>支持 <strong>jsfiddle、gist、runjs、优酷视频</strong>，直接填写 url，在其之后会自动添加预览点击会展开相关内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;&#123;url_of_the_fiddle&#125;&#x2F;embedded&#x2F;[&#123;tabs&#125;&#x2F;[&#123;style&#125;]]&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;gist.github.com&#x2F;&#123;gist_id&#125;</span><br><span class="line">http:&#x2F;&#x2F;runjs.cn&#x2F;detail&#x2F;&#123;id&#125;</span><br><span class="line">http:&#x2F;&#x2F;v.youku.com&#x2F;v_show&#x2F;id_&#123;video_id&#125;.html</span><br></pre></td></tr></table></figure><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$ x &#x3D; &#123;-b \pm \sqrt&#123;b^2-4ac&#125; \over 2a&#125;. $$</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">x \href&#123;why-equal.html&#125;&#123;&#x3D;&#125; y^2 + 1</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>同时也支持 HTML 属性，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$ (x+1)^2 &#x3D; \class&#123;hidden&#125;&#123;(x+1)(x+1)&#125; $$</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">(x+1)^2 &#x3D; \cssId&#123;step1&#125;&#123;\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Markdown是一种可以使用普通文本编辑器编写的&lt;a href=&quot;https://baike.baidu.com/item/标记语言/5964436&quot;&gt;标记语言&lt;/a&gt;，通过简单的标记语法，它可以使普通文本内容具有一定的格式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Tips: 本文仅方便自己学习作保存之用，&lt;a href=&quot;https://segmentfault.com/markdown&quot;&gt;点我阅读原文&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="reprint" scheme="https://sevth.com/categories/reprint/"/>
    
    
      <category term="markdown" scheme="https://sevth.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配合CDN使用源站被暴露的问题</title>
    <link href="https://sevth.com/technology/website/Nginx%E9%85%8D%E5%90%88CDN%E4%BD%BF%E7%94%A8%E6%BA%90%E7%AB%99%E8%A2%AB%E6%9A%B4%E9%9C%B2%E7%9A%84%E9%97%AE%E9%A2%98.html"/>
    <id>https://sevth.com/technology/website/Nginx%E9%85%8D%E5%90%88CDN%E4%BD%BF%E7%94%A8%E6%BA%90%E7%AB%99%E8%A2%AB%E6%9A%B4%E9%9C%B2%E7%9A%84%E9%97%AE%E9%A2%98.html</id>
    <published>2020-04-10T12:02:17.000Z</published>
    <updated>2020-04-10T14:10:54.330Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote><p><code>CDN</code> 即内容分发网络，<code>CDN</code>依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能，使用户就近获取所需的内容，降低网络阻塞，提高用户访问响应速度和命中率。                – 引用自<a href="https://baike.baidu.com/item/CDN/420951?fr=aladdin">《百度百科》</a></p><p><code>CDN</code>不仅具有加速的效果，更重要的是，保护源站安全，隐藏真实的源站信息。</p></blockquote><a id="more"></a><h4 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h4><p>在本博客部署之后，<code>CDN</code> 也用上了，然而出现了奇奇怪怪的问题。比如点击菜单栏的时候，自动跳转到源站域名去了，纳尼。这怎么能忍，于是敲开了 <code>Chrome</code> 的开发者工具（<kbd>F12</kbd> 打开）。 <code>Network</code> 选项卡查看到如下信息:</p><img src="https://img.sevth.com/website/2020/04/10/322cbc7aaf1a69d92e7dd73a5edbe52e.png" alt="image-20200410170952004" style="zoom: 67%;" /><h5 id="从图中看得到的信息"><a href="#从图中看得到的信息" class="headerlink" title="从图中看得到的信息"></a>从图中看得到的信息</h5><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">request</span>: https://sevth.com/music -&gt; response: https://xxxxxx/music/</span><br></pre></td></tr></table></figure><h5 id="我们可以知道的一些事情"><a href="#我们可以知道的一些事情" class="headerlink" title="我们可以知道的一些事情"></a>我们可以知道的一些事情</h5><p>首先，排除掉是 <code>CDN</code> 网络返回该状态码，一般情况下，<code>CDN</code>响应的内容都是根据源站的内容来响应的，不会主动响应某些内容。</p><p>然后我登录到服务查看 <code>Nginx</code> 日志，发现大量的 <code>301</code> 重定向。</p><p><img src="https://img.sevth.com/website/2020/04/10/6401a2da96471dda344e5ca1d6084b34.png" alt="image-20200410214208446"></p><p>这两条的记录区别就是，末尾带 <code>/</code> 的请求通过了，不带的被 <code>301</code> 重定向了，而且被重定向的地址还是绝对地址。</p><p>经过一番百度得知：</p><blockquote><p>Nginx主动设置301 Moved Permanently状态码只有一种情况，当用户输入了一个url地址，最后的部分是一个文件目录。比如 <a href="http://www.test.com/index">http://www.test.com/index</a>, Nginx在运行过程中没有找到index这个文件，但发现了index是个目录。于是本次访问的状态码就会被设置成301 Moved Permanently。</p></blockquote><h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><p>知道了原因后，解决就简单了，让 <code>Nginx</code> 不返回绝对地址，返回相对地址不就行了呗。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    <span class="attribute">absolute_redirect</span> <span class="literal">off</span>;</span><br><span class="line">    </span><br><span class="line">    // 其它配置...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h4><p><img src="https://img.sevth.com/website/2020/04/10/7cdae9beadd9719f27026b274ee1be71.png" alt="image-20200410172154141"></p><p>这样就完美的解决了问题。</p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><blockquote><p>参考文献: <a href="https://web-security.cn/nginx_default_configuration_expose_cdn_source_site/">Nginx默认配置导致CDN源站泄露</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;CDN&lt;/code&gt; 即内容分发网络，&lt;code&gt;CDN&lt;/code&gt;依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能，使用户就近获取所需的内容，降低网络阻塞，提高用户访问响应速度和命中率。                – 引用自&lt;a href=&quot;https://baike.baidu.com/item/CDN/420951?fr=aladdin&quot;&gt;《百度百科》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CDN&lt;/code&gt;不仅具有加速的效果，更重要的是，保护源站安全，隐藏真实的源站信息。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="technology" scheme="https://sevth.com/categories/technology/"/>
    
      <category term="website" scheme="https://sevth.com/categories/technology/website/"/>
    
    
      <category term="Nginx" scheme="https://sevth.com/tags/Nginx/"/>
    
      <category term="CDN" scheme="https://sevth.com/tags/CDN/"/>
    
  </entry>
  
</feed>
